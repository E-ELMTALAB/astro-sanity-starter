---
import { marked } from 'marked';
import { type Card } from 'types';
import Action from '@components/Action.astro';
import Badge from '@components/Badge.astro';
import ResponsiveImage from '@components/ResponsiveImage.astro';

interface Props extends Card {
    class?: string;
    'data-sb-field-path'?: string;
}

const { badge, heading, body, cta, image, theme, textAlign, hasBorder, class: className, 'data-sb-field-path': fieldPath } = Astro.props;
---

<div
    class:list={[
        'card',
        hasBorder !== false && 'card-border',
        'w-full max-w-2xl',
        'rounded-2xl shadow-sm hover:shadow-lg transition-shadow duration-200',
        className
    ]}
    {...theme && theme !== 'transparent' && { 'data-theme': theme }}
    data-sb-field-path={fieldPath}
>
    {
        image && image.src && (
            <figure data-sb-field-path=".image" class="overflow-hidden rounded-t-2xl">
                <ResponsiveImage
                    _id={image._id}
                    src={image.src}
                    width={image.dimensions?.width}
                    height={image.dimensions?.height}
                    alt={image.alt}
                    class="w-full h-auto object-cover"
                />
            </figure>
        )
    }
    <div class:list={[
        'card-body gap-5',
        textAlign === 'center' ? 'items-center text-center' : 'text-left'
    ]}>
        {badge && badge.label && <Badge {...badge} data-sb-field-path=".badge" />}
        {
            heading && (
                <h3 class="font-black card-title sm:text-2xl" data-sb-field-path=".heading">
                    {heading}
                </h3>
            )
        }
        {body && <div class="markdown" set:html={marked.parse(body)} data-sb-field-path=".body" />}
        {
            cta && cta.length > 0 && (
                <div class="card-actions items-center gap-3" data-sb-field-path=".cta">
                    {cta.map((item, index) => (
                        <Action
                            action={item}
                            class:list={[item._type === 'actionLink' ? 'font-bold underline hover:no-underline' : 'px-4 py-2.5 h-auto min-h-0']}
                            data-sb-field-path={`.${index}`}
                        />
                    ))}
                </div>
            )
        }
    </div>
</div>
