---
import { marked } from 'marked';
import Section from '@components/Section.astro';
import type { SupportSection } from 'types';

interface Props extends SupportSection {
    'data-sb-field-path'?: string;
}

const { heading, body, items, 'data-sb-field-path': fieldPath, ...rest } = Astro.props;
const supportItems = Array.isArray(items) ? items : [];
---

{(heading || body || supportItems.length) ? (
    <Section {...rest} data-sb-field-path={fieldPath} class="space-y-6">
        {heading && (
            <h2 class="text-3xl font-bold" data-sb-field-path=".heading">
                {heading}
            </h2>
        )}
        {body && (
            <div class="markdown max-w-2xl text-sm opacity-80" data-sb-field-path=".body" set:html={marked.parse(body)} />
        )}
        {supportItems.length ? (
            <div class="grid grid-cols-1 gap-6 md:grid-cols-2" data-sb-field-path=".items">
                {supportItems.map((item, idx) => (
                    <article
                        class="flex h-full flex-col gap-4 rounded-2xl border border-base-200 bg-base-100 p-6 shadow-sm"
                        data-sb-field-path={`.${idx}`}
                    >
                        <div class="space-y-2">
                            {item?.icon && (
                                <div class="text-2xl" data-sb-field-path=".icon">
                                    {item.icon}
                                </div>
                            )}
                            {item?.title && (
                                <h3 class="text-xl font-semibold" data-sb-field-path=".title">
                                    {item.title}
                                </h3>
                            )}
                            {item?.description && (
                                <p class="text-sm opacity-80" data-sb-field-path=".description">
                                    {item.description}
                                </p>
                            )}
                        </div>
                        {item?.actionLink && item?.actionText ? (
                            <a
                                href={item.actionLink}
                                class="btn btn-secondary mt-auto"
                                data-sb-field-path=".actionText"
                            >
                                {item.actionText}
                                <span class="hidden" aria-hidden="true" data-sb-field-path=".actionLink">
                                    {item.actionLink}
                                </span>
                            </a>
                        ) : null}
                    </article>
                ))}
            </div>
        ) : null}
    </Section>
) : null}
