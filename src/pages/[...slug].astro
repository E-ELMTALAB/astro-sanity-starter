---
import type { Page } from 'types';
import TelegramShopHome from '@components/TelegramShopHome.tsx';
import { fetchData, getPageById } from '@data/page';
import { fetchData as fetchSiteConfig } from '@data/siteConfig';
import Layout from '@layouts/Layout.astro';

export async function getStaticPaths() {
    const data = await fetchData();
    return data.map((page: Page) => {
        const slug = page.slug.current === '/' ? undefined : page.slug.current;
        return {
            params: { slug },
            props: { id: page._id }
        };
    });
}

const { id } = Astro.props;
const pages = await getPageById(id);
const page: Page = pages.length ? pages[0] : null;

const { _id, title, sections, metaTitle, metaDescription, socialImage } = page || {};
const siteConfig = await fetchSiteConfig();

// Find all section types and their indices for homepage
const sectionsArray = Array.isArray(sections) ? sections : [];

const findSection = (type: string) => {
    const index = sectionsArray.findIndex((s: any) => s?._type === type);
    return { section: index >= 0 ? sections[index] : null, index };
};

const { section: storiesSection, index: storiesIndex } = findSection('storiesSection');
const { section: heroCarouselSection, index: heroCarouselIndex } = findSection('heroCarouselSection');
const { section: categoriesSection, index: categoriesIndex } = findSection('categoriesSection');
const { section: flashSaleSection, index: flashSaleIndex } = findSection('flashSaleSection');
const { section: featuredSection, index: featuredIndex } = findSection('featuredProductsSection');
const { section: supportSection, index: supportIndex } = findSection('supportSection');

const isHomePage = page?.slug?.current === '/';
---

{
    page && (
        <Layout
            title={metaTitle ?? title}
            description={metaDescription}
            image={socialImage}
            siteConfig={siteConfig}
        >
            {isHomePage ? (
                <div data-sb-object-id={_id}>
                    <TelegramShopHome
                        client:load
                        stories={storiesSection}
                        storiesFieldPath={storiesIndex >= 0 ? `sections.${storiesIndex}` : undefined}
                        heroCarousel={heroCarouselSection}
                        heroCarouselFieldPath={heroCarouselIndex >= 0 ? `sections.${heroCarouselIndex}` : undefined}
                        categories={categoriesSection}
                        categoriesFieldPath={categoriesIndex >= 0 ? `sections.${categoriesIndex}` : undefined}
                        flashSale={flashSaleSection}
                        flashSaleFieldPath={flashSaleIndex >= 0 ? `sections.${flashSaleIndex}` : undefined}
                        featured={featuredSection}
                        featuredFieldPath={featuredIndex >= 0 ? `sections.${featuredIndex}` : undefined}
                        support={supportSection}
                        supportFieldPath={supportIndex >= 0 ? `sections.${supportIndex}` : undefined}
                        checkoutBaseUrl={siteConfig?.checkoutBaseUrl}
                        checkoutProductParam={siteConfig?.checkoutProductParam}
                        checkoutVariantParam={siteConfig?.checkoutVariantParam}
                    />
                </div>
            ) : (
                <div data-sb-object-id={_id} />
            )}
        </Layout>
    )
}
